dataset:
  name: Dataset
  display_name: Dataset
  description: |
    A set of behavioral data acquired for the purpose of a particular study or set of studies.
extension:
  name: File extension
  display_name: File extension
  description: |
    A portion of the file name after the left-most period (`.`) preceded by any other alphanumeric.
    For example, `.gitignore` does not have a file extension,
    but the file extension of 'study-1_data.csv' is '.csv'.
    Note that the left-most period is included in the file extension.
keywords:
  name: Keywords
  display_name: Keywords
  description: |
    A set of identifying key-value duples associated with a given data file.
    Keys are limited to a vocabulary of:
      - study
      - site
      - subject
      - session
      - task
      - condition
      - trial
      - stimulus
      - description
raw_data:
  name: Raw data
  display_name: Raw data
  description: |
    A central principle for Psych-DS is that the earliest form of the data you have access to should always be saved, 
    should never be modified, and should be kept separate from any additional versions created. This data could take any form,
    such as physical paper and pencil surveys, digital resources such as videos, etc. At a minimum, it is assumed that a psych-DS
    compliant dataset will contain this original data under the /data directory.
primary_data:
  name: Primary data
  display_name: Primary data
  description: |
    Primary data is considered the first digitized form of the raw data. Sometimes, the primary data and the raw data are the same,
    in the case, for instance, of tabular online survey responses. If the raw data exists in a physical format, then some digitized 
    version must be included in the dataset.
columns:
  name: Columns
  display_name: Columns
  description: |
    In general, Psych-DS has minimal restraints and conventions regarding column names. 
    We RECOMMEND that you use the controlled keywords defined elsewhere in the standard plus "_id"
    as column names if referring to the relevant information in a dataset. (That is, if you record trials
    with the scope of a given datafile, we RECOMMEND that the name of the column identifying the trial
    be "trial_id"). This information can be redundantly stored (i.e., a file named "study-MyExp_trial-1_data.csv"
    can also have a column "trial_id" which has rows with the value "1").

    In many cases, some combination of columns will uniquely identify every row in the dataset (for instance,
    each participant might have several rows, but there might be exactly one row for every combination of 
    particupant, condition, and trial.) The column or set of columns provides a unique key for every record/row in
    your dataset. We RECOMMEND that you include a description of which columns create a unique key for your dataset
    in the README for your project.

    If you have a column that uniquely identifies each single row of a dataset explicitly it SHOULD be named
    "row_id". A column named "row_id" MUST contain unique values in every row.
inheritance:
  name: Inheritance
  display_name: Inheritance
  description: |
    In addition to the mandatory "dataset_description.json" file at the root of the dataset,
    Psych-DS allows for the inclusion of additional metadata files, whose fields apply to 
    specific subsets of the data. There are two types of inherited metadata:

    1. Sidecar files, which contain metadata that pertains to one specific datafile. These sidecars
    must have the exact same name as their corresponding datafile, with the ".json" extension instead 
    of the ".csv" extension. Sidecars must occupy the same directory as their datafile.
    2. Directory metadata, which always takes the form "file_metadata.json". The metadata contained in
    such files apply to all datafiles within its directory and all subdirectories thereof.

    Metadata key/value pairs found in higher-level JSON files are inherited by all lower levels unless they are explicitly 
    overridden by a file at the lower level.

    For example, suppose we have the following project structure:

    data/
      file_metadata.json
      subject-1/
        file_metadata.json
        subject-1_condition-A_data.csv
        subject-1_condition-B_data.json
        subject-1_condition-B_data.csv
      subject-2/
        subject-2_condition-A_data.json
        subject-2_condition-A_data.csv
        subject-2_condition-B_data.csv

    There are 4 datafiles within the data/ hierarchy; let's consider which metadata files apply to each one, and in what order 
    the metadata files should be processed/inherited:
     - data/subject-1/subject-1_condition-A_data.csv: There is no JSON sidecar for this file. 
       However, there is a file_metadata.json file in the same directory as the data file, 
       as well as in one above it. The consolidated metadata object would start with the 
       contents of the higher-level file (data/file_metadata.json), and then update it with 
       the contents of the lower-level file (data/subject-1/file_metadata.json).
     - data/subject-1/subject-1_condition-B_data.csv: The same process unfolds as for the previous 
       file; however, the consolidated object is now further updated with the contents of the target 
       data fileâ€™s JSON sidecar (i.e., subject-1_condition-B_data.json).
     - data/subject-2/subject-2_condition-A_data.csv: The contents of data/file_metadata.json 
       are read, and then updated with the contents of data/subject-2/subject-2_condition-A_data.json.
     - data/subject-2/subject-2_condition-B_data.csv: There is only a single applicable metadata 
       file (data/file_metadata.json), from which all metadata is read.
    
    Note that any inherited key/value pair from a metadata file replaces the value for the key wholesale,
    and there is no merging processed involved. For instance, if the root metadata file contains a "variableMeasured"
    property with 10 elements, and a lower level metadata file contains a "variableMeasured" property with
    5 elements, the resulting inherited object will only contain the 5 "variableMeasured" elements
    from the inherited metadata. The lists are not combined in any way, but replaced.